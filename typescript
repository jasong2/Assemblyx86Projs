Script started on Thu 22 Feb 2018 08:00:35 AM EST
linux1[57]% nasm -f elf hello.asm[13Gls[Kcd proj0[16Gcmsc313[16Gproj0[K[13Gls[Knasm -f elf hello.asm[13G[Knasm -f elf64 -g -F stabs hello.asm[P[P[P[P[P[1@i[1@s[1@b[1@n
linux1[58]% ld -o isbn isbn .[K.o
linux1[59]% isbn
Enter 10 digit ISBN: 3201541974
This is a valid ISBN number.
linux1[60]% isbn
Enter 10 digit ISBN: 0457773706
This is NOT a valid ISBN number.
linux1[61]% isbn
Enter 10 digit ISBN: 044101125X
This is a valid ISBN number.
linux1[62]% ls
isbn  isbn.asm	isbn.o	typescript
linux1[63]% db[K[Kgdb isbn
[?1034hGNU gdb (GDB) Red Hat Enterprise Linux (7.2-92.el6)
Copyright (C) 2010 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-redhat-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /afs/umbc.edu/users/r/a/ramseyk/pub/cs313_ramseyk/proj1/jasong2/isbn...done.
(gdb) print/d $eax
No registers.
(gdb) print/d $eax[1Pxcx
No registers.
(gdb) print/d $ecx[K[Kdx
No registers.
(gdb) run
Starting program: /afs/umbc.edu/users/r/a/ramseyk/pub/cs313_ramseyk/proj1/jasong2/isbn 
Enter 10 digit ISBN: 3201541974
This is a valid ISBN number.

Program exited normally.
(gdb) break *_start[K[K[K[K[K[K[K[K[K[K[K[K[Klist 1,150 150[C[C[C
1	;; ******************************************************
2	;; Jason Gorelik
3	;; CMSC313 Assembly
4	;; Proj1
5	;;			Proj1 - ISBN Validation
6	;;
7	;; This program will check if the user input is
8	;; a valid ISBN number.
9	;; ****************************************************** 
10	
11		%define STDIN 0
12		%define STDOUT 1
13		%define STDERR 2
14		%define SYSCALL_EXIT  1
15		%define SYSCALL_READ  3
16		%define SYSCALL_WRITE 4
17		%define BUFLEN 256
18	
19	[SECTION .data]
20	
21	msg1:	   db "Enter 10 digit ISBN: "	; user prompt
22	len1:	   equ $-msg1	 		; length of first message
23	
24	msg2:	   db "This is NOT a valid ISBN number.", 0Ah   
25	len2:	   equ $-msg2		                   
---Type <return> to continue, or q <return> to quit---continue[K[K[K[K[K[K[K[Kcontinue
26	
27	msg3:	   db "This is a valid ISBN number.", 0Ah     
28	len3:	   equ $-msg3
29	
30	msg4:	   db "Invalid Number.", 0Ah
31	len4:	   equ $-msg4	
32	
33	;; loop variables
34	sum:	 db '0'
35	t:	db '0'
36	
37		
38	[SECTION .bss]
39	
40	buf:	         resb BUFLEN		; buffer for read
41	readlen:	 resb 4		        ; storage for the length of string we read
42	
43	[SECTION .text]
44	
45	global _start		; make start global so ld can find it
46	
47	_start:
48	
49		;;  prompt for user input
---Type <return> to continue, or q <return> to quit---break[K[K[K[K[Kcontinnue[K[K[K[Knue
50		mov eax, SYSCALL_WRITE
51		mov ebx, STDOUT
52		mov ecx, msg1
53		mov edx, len1
54		int 80H
55	
56	        ;;  read user input
57		mov eax, SYSCALL_READ
58		mov ebx, STDIN
59		mov ecx, buf
60		mov edx, BUFLEN
61		int 80H
62		
63		;; check if string has 10 characters 
64		mov [readlen], eax
65		add eax, '0'
66		cmp eax, 3Bh
67		jl .invalidNumber
68		cmp eax, 3Bh
69		jg .invalidNumber
70		
71		;; string put into esi
72		mov esi, buf
73	
74		;; sum and t put in registers
---Type <return> to continue, or q <return> to quit---continue
75	
76		mov ch, [sum]
77		mov ah, [t]
78		
79		;; mov number 9 to register cl for the loop
80		mov cl, 39h
81		
82		.loop:
83		;; compare to 0. if less than, jump to done
84			cmp cl, 30h	
85		 	jl  .done
86		
87		 	mov bh, [esi]
88	
89		;; compare if bh holds Holds, jump to correct method if true
90			cmp bh, 58h
91			je .calcX
92		
93			jmp .calcT
94		;; check if sum is 1 after checking for X
95		 .calcX:
96			add ah, 10
97			sub ah, 11
98		 	add ch, ah
99			sub ch, '0'
---Type <return> to continue, or q <return> to quit---break 87
100			sub ch, 11
101			
102			cmp ch, 30h
103			je .validISBN
104			jmp .notValidISBN
105		;; calculate T
106		 .calcT:
107		 	add ah, bh
108			sub ah, '0'
109			
110		 	cmp ah, 3Bh
111		 	jge .minusElevenT
112			jmp .calcSum
113		;; subtract 11 from T if T is greater or equal to 11
114		 .minusElevenT:
115		 	sub ah, 11
116		 	jmp .calcSum
117		;; calculate sum
118		 .calcSum:
119		 	add ch, ah
120		 	sub ch, '0'
121	
122			cmp ch, 3Bh
123		 	jge .minusElevenSum
124		 	jmp .cycle
---Type <return> to continue, or q <return> to quit---
125		;; subtract 11 from sum if sum is greater or equal to 11
126		 .minusElevenSum:
127		 	sub ch, 11
128		 	jmp .cycle
129		;; auto increment loop and next character
130		 .cycle:
131		 	add esi, 1
132		 	sub cl, 1
133	
134		 	jmp .loop
135		 .done:
136	
137		 cmp ch, 30h
138		 je .validISBN
139		 jmp .notValidISBN
140		
141		;; valid ISBN write method
142		 .validISBN:
143			 mov eax, SYSCALL_WRITE
144		         mov ebx, STDOUT
145		         mov ecx, msg3
146		         mov edx, len3
147		         int 80H
148			 jmp .end
149		;; not valid ISBN write method
---Type <return> to continue, or q <return> to quit---list 1, 150run[Kprint/d $edxcxaxcx[K[K[K[K[K[K[K[K[K[K[K[Kquit
Quit
(gdb) break 87
Breakpoint 1 at 0x400118: file isbn.asm, line 87.
(gdb) break 106
Breakpoint 2 at 0x40013d: file isbn.asm, line 106.
(gdb) break 114
Breakpoint 3 at 0x40014c: file isbn.asm, line 114.
(gdb) break 118
Breakpoint 4 at 0x400154: file isbn.asm, line 118.
(gdb) break 126
Breakpoint 5 at 0x400163: file isbn.asm, line 126.
(gdb) break 137
Breakpoint 6 at 0x400179: file isbn.asm, line 137.
(gdb) display esi
No symbol "esi" in current context.
(gdb) displlay $esi[K[K[K[K[K[K[K[Kay esi[K[K[K$esi
(gdb) display $ch
(gdb) display $ah
(gdb) run
Starting program: /afs/umbc.edu/users/r/a/ramseyk/pub/cs313_ramseyk/proj1/jasong2/isbn 
Enter 10 digit ISBN: 3201541974

Breakpoint 1, _start.loop () at isbn.asm:87
87		 	mov bh, [esi]
3: $ah = 48
2: $ch = 48
1: $esi = 6292040
(gdb) contiu[Knue[K[K[K[K[K[K[K[Kx/12cb &msg1
0x6001e0 <msg1>:	69 'E'	110 'n'	116 't'	101 'e'	114 'r'	32 ' '	49 '1'	48 '0'
0x6001e8:	32 ' '	100 'd'	105 'i'	103 'g'
(gdb) x/12cb &msg1[K2
0x6001f5 <msg2>:	84 'T'	104 'h'	105 'i'	115 's'	32 ' '	105 'i'	115 's'	32 ' '
0x6001fd:	78 'N'	79 'O'	84 'T'	32 ' '
(gdb) x/12cb &msg2[K3
0x600216 <msg3>:	84 'T'	104 'h'	105 'i'	115 's'	32 ' '	105 'i'	115 's'	32 ' '
0x60021e:	97 'a'	32 ' '	118 'v'	97 'a'
(gdb) continue
Continuing.

Breakpoint 2, _start.calcT () at isbn.asm:107
107		 	add ah, bh
3: $ah = 48
2: $ch = 48
1: $esi = 6292040
(gdb) 
Continuing.

Breakpoint 4, _start.calcSum () at isbn.asm:119
119		 	add ch, ah
3: $ah = 51
2: $ch = 48
1: $esi = 6292040
(gdb) 
Continuing.

Breakpoint 1, _start.loop () at isbn.asm:87
87		 	mov bh, [esi]
3: $ah = 51
2: $ch = 51
1: $esi = 6292041
(gdb) 
Continuing.

Breakpoint 2, _start.calcT () at isbn.asm:107
107		 	add ah, bh
3: $ah = 51
2: $ch = 51
1: $esi = 6292041
(gdb) 
Continuing.

Breakpoint 4, _start.calcSum () at isbn.asm:119
119		 	add ch, ah
3: $ah = 53
2: $ch = 51
1: $esi = 6292041
(gdb) 
Continuing.

Breakpoint 1, _start.loop () at isbn.asm:87
87		 	mov bh, [esi]
3: $ah = 53
2: $ch = 56
1: $esi = 6292042
(gdb) 
Continuing.

Breakpoint 2, _start.calcT () at isbn.asm:107
107		 	add ah, bh
3: $ah = 53
2: $ch = 56
1: $esi = 6292042
(gdb) 
Continuing.

Breakpoint 4, _start.calcSum () at isbn.asm:119
119		 	add ch, ah
3: $ah = 53
2: $ch = 56
1: $esi = 6292042
(gdb) 
Continuing.

Breakpoint 5, _start.minusElevenSum () at isbn.asm:127
127		 	sub ch, 11
3: $ah = 53
2: $ch = 61
1: $esi = 6292042
(gdb) 
Continuing.

Breakpoint 1, _start.loop () at isbn.asm:87
87		 	mov bh, [esi]
3: $ah = 53
2: $ch = 50
1: $esi = 6292043
(gdb) 
Continuing.

Breakpoint 2, _start.calcT () at isbn.asm:107
107		 	add ah, bh
3: $ah = 53
2: $ch = 50
1: $esi = 6292043
(gdb) 
Continuing.

Breakpoint 4, _start.calcSum () at isbn.asm:119
119		 	add ch, ah
3: $ah = 54
2: $ch = 50
1: $esi = 6292043
(gdb) 
Continuing.

Breakpoint 1, _start.loop () at isbn.asm:87
87		 	mov bh, [esi]
3: $ah = 54
2: $ch = 56
1: $esi = 6292044
(gdb) 
Continuing.

Breakpoint 2, _start.calcT () at isbn.asm:107
107		 	add ah, bh
3: $ah = 54
2: $ch = 56
1: $esi = 6292044
(gdb) 
Continuing.

Breakpoint 3, _start.minusElevenT () at isbn.asm:115
115		 	sub ah, 11
3: $ah = 59
2: $ch = 56
1: $esi = 6292044
(gdb) 
Continuing.

Breakpoint 4, _start.calcSum () at isbn.asm:119
119		 	add ch, ah
3: $ah = 48
2: $ch = 56
1: $esi = 6292044
(gdb) 
Continuing.

Breakpoint 1, _start.loop () at isbn.asm:87
87		 	mov bh, [esi]
3: $ah = 48
2: $ch = 56
1: $esi = 6292045
(gdb) 
Continuing.

Breakpoint 2, _start.calcT () at isbn.asm:107
107		 	add ah, bh
3: $ah = 48
2: $ch = 56
1: $esi = 6292045
(gdb) 
Continuing.

Breakpoint 4, _start.calcSum () at isbn.asm:119
119		 	add ch, ah
3: $ah = 52
2: $ch = 56
1: $esi = 6292045
(gdb) 
Continuing.

Breakpoint 5, _start.minusElevenSum () at isbn.asm:127
127		 	sub ch, 11
3: $ah = 52
2: $ch = 60
1: $esi = 6292045
(gdb) 
Continuing.

Breakpoint 1, _start.loop () at isbn.asm:87
87		 	mov bh, [esi]
3: $ah = 52
2: $ch = 49
1: $esi = 6292046
(gdb) 
Continuing.

Breakpoint 2, _start.calcT () at isbn.asm:107
107		 	add ah, bh
3: $ah = 52
2: $ch = 49
1: $esi = 6292046
(gdb) 
Continuing.

Breakpoint 4, _start.calcSum () at isbn.asm:119
119		 	add ch, ah
3: $ah = 53
2: $ch = 49
1: $esi = 6292046
(gdb) 
Continuing.

Breakpoint 1, _start.loop () at isbn.asm:87
87		 	mov bh, [esi]
3: $ah = 53
2: $ch = 54
1: $esi = 6292047
(gdb) 
Continuing.

Breakpoint 2, _start.calcT () at isbn.asm:107
107		 	add ah, bh
3: $ah = 53
2: $ch = 54
1: $esi = 6292047
(gdb) 
Continuing.

Breakpoint 3, _start.minusElevenT () at isbn.asm:115
115		 	sub ah, 11
3: $ah = 62
2: $ch = 54
1: $esi = 6292047
(gdb) 
Continuing.

Breakpoint 4, _start.calcSum () at isbn.asm:119
119		 	add ch, ah
3: $ah = 51
2: $ch = 54
1: $esi = 6292047
(gdb) 
Continuing.

Breakpoint 1, _start.loop () at isbn.asm:87
87		 	mov bh, [esi]
3: $ah = 51
2: $ch = 57
1: $esi = 6292048
(gdb) 
Continuing.

Breakpoint 2, _start.calcT () at isbn.asm:107
107		 	add ah, bh
3: $ah = 51
2: $ch = 57
1: $esi = 6292048
(gdb) 
Continuing.

Breakpoint 4, _start.calcSum () at isbn.asm:119
119		 	add ch, ah
3: $ah = 58
2: $ch = 57
1: $esi = 6292048
(gdb) 
Continuing.

Breakpoint 5, _start.minusElevenSum () at isbn.asm:127
127		 	sub ch, 11
3: $ah = 58
2: $ch = 67
1: $esi = 6292048
(gdb) 
Continuing.

Breakpoint 1, _start.loop () at isbn.asm:87
87		 	mov bh, [esi]
3: $ah = 58
2: $ch = 56
1: $esi = 6292049
(gdb) 
Continuing.

Breakpoint 2, _start.calcT () at isbn.asm:107
107		 	add ah, bh
3: $ah = 58
2: $ch = 56
1: $esi = 6292049
(gdb) 
Continuing.

Breakpoint 3, _start.minusElevenT () at isbn.asm:115
115		 	sub ah, 11
3: $ah = 62
2: $ch = 56
1: $esi = 6292049
(gdb) 
Continuing.

Breakpoint 4, _start.calcSum () at isbn.asm:119
119		 	add ch, ah
3: $ah = 51
2: $ch = 56
1: $esi = 6292049
(gdb) 
Continuing.

Breakpoint 5, _start.minusElevenSum () at isbn.asm:127
127		 	sub ch, 11
3: $ah = 51
2: $ch = 59
1: $esi = 6292049
(gdb) 
Continuing.

Breakpoint 6, _start.done () at isbn.asm:137
137		 cmp ch, 30h
3: $ah = 51
2: $ch = 48
1: $esi = 6292050
(gdb) 
Continuing.
This is a valid ISBN number.

Program exited normally.
(gdb) quit
linux1[64]% ls
isbn  isbn.asm	isbn.o	typescript
linux1[65]% exit
exit

Script done on Thu 22 Feb 2018 08:13:05 AM EST
